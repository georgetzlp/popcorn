name: Build
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        build_type: [main, preload, renderer, types]
        include:
          - build_type: browser
            extra_command: pnpm run lint:ext

    name: Build ${{ matrix.build_type }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x.x

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH  }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build ${{ matrix.build_type }}
        run: pnpm run build ${{ matrix.build_type }}

      - name: Run lint:ext (only for browser)
        if: matrix.extra_command
        run: ${{ matrix.extra_command }}
