name: Check
on:
  push:
    paths:
      - package.json
      - tsconfig.json
      - /**/tsconfig.json
      - scripts/types.mts
      - src/**.[cm]?ts
      - types/**.[cm]?ts
      - src/browser/manifests.mts
      - eslint.config.mjs
  pull_request:
    paths:
      - package.json
      - tsconfig.json
      - /**/tsconfig.json
      - scripts/types.mts
      - src/**.ts
      - types/**.ts
      - src/browser/manifests.mts
      - eslint.config.mjs

jobs:
  check:
    runs-on: ubuntu-latest

    name: Run TypeChecks
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x.x

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: Set up pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH  }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Download & Patch types
        run: pnpm run types

      - name: Run ESLint
        run: pnpm run lint

      - name: Run TypeChecks
        run: pnpm run check
